services:
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PWD}
      MYSQL_DATABASE: ${DB_NAME}
    ports:
      - "${MYSQL_PORT}:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-p${DB_PWD}" ]
      interval: 10s
      timeout: 2s
      retries: 2
    networks:
      - backend

  redis:
    image: redis:7.2
    container_name: redis-container
    restart: always
    ports:
      - "${REDIS_PORT}:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 2s
      retries: 2
    networks:
      - backend

  app-blue:
    image: ${DOCKERHUB_USERNAME}/chichi-app:latest
    container_name: app-blue
    depends_on:
      - mysql
      - redis
    environment:
      COLOR: blue
      DB_HOST: mysql
      REDIS_HOST: redis
      DB_NAME: ${DB_NAME}
      DB_PWD: ${DB_PWD}
      DB_USER: ${DB_USER}
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "8081:8080"
    networks:
      - backend

  app-green:
    image: ${DOCKERHUB_USERNAME}/chichi-app:latest
    container_name: app-green
    depends_on:
      - mysql
      - redis
    environment:
      COLOR: green
      DB_HOST: mysql
      REDIS_HOST: redis
      DB_NAME: ${DB_NAME}
      DB_PWD: ${DB_PWD}
      DB_USER: ${DB_USER}
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "8082:8080"
    networks:
      - backend

  nginx:
    image: nginx:latest
    container_name: nginx-container
    depends_on:
      - app-${ACTIVE_COLOR}
    restart: always
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 10s
      timeout: 5s
      retries: 2
      start_period: 2s
    networks:
      - backend
    command: >
      /bin/sh -c "
        cp /etc/nginx/conf.d/nginx.${ACTIVE_COLOR}.conf /etc/nginx/nginx.conf && \
        while :; do sleep 6h & wait $${!}; nginx -s reload; done & \
        nginx -g 'daemon off;'"

  certbot:
    container_name: certbot-container
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - backend

networks:
  backend:
